---
title: "Lab: LogisticRegression"
author: "Zi Ye"
date: "`r Sys.Date()`"
output: html_document
---

Last week, we learnt how to use qualitative variables in multiple linear regression model to understand the relationship between independent variables X1 ... Xn and the dependent variable Y. Today we will learn to use logistic regression for binary dependent variable. A **logistic regression model** is a type of regression analysis used when the dependent variable is binary (e.g., "success/failure" or "0/1"). It estimates the probability of one outcome relative to the other using a logistic function. This model is commonly used in situations like predicting disease presence (yes/no) or customer churn (stay/leave). The independent variables can be continuous, categorical, or a mix of both. The model's output is in the form of odds ratios, showing how predictors affect the likelihood of the outcome.

The lecture’s slides can be found [here](https://github.com/GDSL-UL/stats/blob/main/lectures/Lecture10.pdf).

**Learning objectives**

An understanding of, and ability to:

-   Estimate and interpret a logistic regression model

-   Assess the model fit

The application context of a binomial logistic regression model is when the dependent variable under investigation is a binary variable. Usually, a value of 1 for this dependent variable means the occurrence of an event; and, 0 otherwise. For example, the dependent variable for this practical is whether a person is a long-distance commuter i.e. 1, and 0 otherwise.

In this week’s practical, we are going to apply logistic regression analysis in an attempt to answer the following research question:

::: {style="background-color: #FFFBCC; padding: 10px; border-radius: 5px; border: 1px solid #E1C948;"}
**RESEARCH QUESTION: Who is willing to commute long distances?**
:::

The practical is split into two main parts. The first focuses on implementing a binary logistic regression model with R. The second part focuses the interpretation of the resulting estimates.

## Preparing the input variables

Prepare the data for implementing a logistic regression model. The data set used in this practical is the “sar_sample_label.csv” and "sar_sample_code.csv". The SAR is a snapshot of census microdata, which are individual level data. The data sample has been drawn and anonymised from census and known as the Samples of Anonymised Records (SARs).

You may need to download the two datasets from our [github website](https://github.com/GDSL-UL/stats/tree/main/data/SAR) if you haven't. The two csv are actually the same dataframe, only one uses the label as the value but the other uses the code. We will first read in both for the data overview the labels are more friendly, and then we focus on using "sar_sample_code.csv" in the regression model as it is easier for coding.

```{r, message=FALSE}
if(!require("tidyverse"))
  install.packages("tidyverse",dependencies = T)
if(!require("broom"))
  install.packages("broom",dependencies = T)

library(tidyverse)
library(broom)
```

```{r,results='hide'}
sar_label <- read_csv("../data/SAR/sar_sample_label.csv")
sar_code <- read_csv("../data/SAR/sar_sample_code.csv")
```

```{r,results='hide'}
View(sar_label)
View(sar_code)

glimpse(sar_label)
glimpse(sar_code)
```

```{r,results='hide'}
summary(sar_code)
summary(sar_label)
```

The outcome variable is a person’s commuting distance captured by the variable “work_distance”.

```{r}
table(sar_label$work_distance)
```

```{r}
table(sar_code$work_distance)
```

There are a variety of categories in the variable, however, we are only interested in commuting distance and therefore in people reporting their commuting distance. Thus, we will explore the numeric codes of the variable ranging from 1 to 8.

| Code for Work_distance | Categories                                   |
|------------------------|----------------------------------------------|
| 1                      | Less than 2 km                               |
| 2                      | 2 to \<5 km                                  |
| 3                      | 5 to \<10 km                                 |
| 4                      | 10 to \<20 km                                |
| 5                      | 20 to \<40 km                                |
| 6                      | 40 to \<60 km                                |
| 7                      | 60km or more                                 |
| 8                      | At home                                      |
| 9                      | No fixed place                               |
| 10                     | Work outside England and Wales but within UK |
| 11                     | Work outside UK                              |
| 12                     | Works at offshore installation (within UK)   |

As we are also interested in exploring whether people with different socio-economic statuses (or occupations) tend to be associated with varying probabilities of commuting over long distances, we further filter or select cases.

```{r}
table(sar_label$nssec)
table(sar_code$nssec)
```

Using `nssec`, we select people who reported an occupation, and delete cases with numeric codes from 9 to 12, who are *unemployed*, *full-time students*, *children* and *not classifiable*.

| Code for nssec | Category labels                               |
|----------------|-----------------------------------------------|
| 1              | Large employers and higher managers           |
| 2              | Higher professional occupations               |
| 3              | Lower managerial and professional occupations |
| 4              | Intermediate occupations                      |
| 5              | Small employers and own account workers       |
| 6              | Lower supervisory and technical occupations   |
| 7              | Semi-routine occupations                      |
| 8              | Routine occupations                           |
| 9              | Never worked or long-term employed            |
| 10             | Full-time student                             |
| 11             | Not classifiable                              |
| 12             | Child aged 0-15                               |

Now, similar to next week, we use the `filter()` to prepare our dataframe today. You may already realise that using `sar_code` is easier to do the filtering.

```{r}
sar_df <- sar_code %>% filter(work_distance<=8 & nssec <=8 )
```

::: {style="background-color: #FFFBCC; padding: 10px; border-radius: 5px; border: 1px solid #E1C948;"}
**Q1.** Summarise the frequencies of the two variables “work_distance” and “nssec” with the new data.
:::

**Recode the “work_distance” variable into a binary dependent variable**

A simple way to create a binary dependent variable representing long-distance commuting is to use the mutate() function as discussed in last week's practical session. Before creating the binary variables from the “work_distance” variable, we need to define *what counts as a long-distance commuting move*. Such definition can vary. Here we define a long-distance commuting move as any commuting move over a distance above 60km (the category of “60km or more”).

```{r}
sar_df <- sar_df %>% mutate(
  New_work_distance = if_else(work_distance >6, 1,0))

```

::: {style="background-color: #FFFBCC; padding: 10px; border-radius: 5px; border: 1px solid #E1C948;"}
**Q2.** Check the new `sar_df` dataframe with new column named `New_work_distance` by using the codes you have learnt.
:::

**Prepare your "nssec" variable before the regression model**

The `nssec` is a categorical variable. Therefore, as we've learnt last week, before adding the categorical variables into the regression model, we need first make it a factor and then identify the reference category.

We are interested in whether people with occupations being "Higher professional occupations” are associated with a lower probability of commuting over long distances when comparing to people in other occu

```{r}
sar_df$nssec <- relevel(as.factor(sar_df$nssec), ref = "2")
```

### **Implementing a logistic regression model**

The binary dependent variable is long-distance commuting, variable name `New_work_distance`.

The independent variables are gender and socio-economic status.

For gender, we use male as the basline.

```{r}
sar_df$sex <- relevel(as.factor(sar_df$sex),ref="1")
```

For socio-economic status, we use code 5 (Small employers and Own account workers) as the baseline category to explore whether people work as independent employers show lower probability of commuting longer than 60km compared with other occupations.

```{r}
#create the model
m.glm = glm(New_work_distance~sex + nssec, 
            data = sar_df, 
            family= "binomial")
# inspect the results
summary(m.glm) 
```

```{r}
# odds ratios
exp(coef(m.glm)) 
```

```{r}
# confidence intervals
exp(confint(m.glm, level = 0.95)) 
```

::: {style="background-color: #FFFBCC; padding: 10px; border-radius: 5px; border: 1px solid #E1C948;"}
**Q3**. If we want to explore whether people with occupation being "Large employers and higher managers", "Higher professional occupations" and "Routine occupations" are associated with higher probability of commuting over long distance when comparing to people in other occupation, how will we prepare the input independent variables and what will be the specified regression model?
:::

Hint: use mutate() to create a new column, set the value of "Large employers and higher managers", "Higher professional occupations" and "Routine occupations" as original, while the rest as "Other occupations" (recall in Lab 3 what we did for assigning the regions not within "London", "Wales", "Scotland" and "Northern Ireland" as "Other Regions in England"). Here by using the SAR in code format, we can make this more easier by using:

```{r}
sar_df <- sar_df %>% mutate(New_nssec = fct_other(
  nssec,
  keep = c("1", "2", "8"),
  other_level = "0"
))
```

Or by using `if_else` and `%in%` in R, we can achieve the same result. `%in%` is an operator used to test if elements of one vector are present in another. It returns `TRUE` for elements found and `FALSE` otherwise.

```{r}
sar_df <- sar_df %>% mutate(New_nssec = if_else(!nssec %in% c(1,2,8), "0" ,nssec))
```

Use "Other occupations" (code: 0) as the reference category by `relevel(as.factor())` and then create the regression model: `glm(New_work_distance~sex + New_nssec, data = sar_df, family= "binomial")`. Can you now run the model by yourself? Find the answer at the end of the practical.

### **Model fit**

We include the R library `pscl` for calculate the measures of fit.

```{r}
if(!require("pscl"))
  install.packages("pscl")
library(pscl)
```

Relating back to this week’s lecture notes, what is the Pseudo R^2^ of the fitted logistic model (from the Model Summary table below)?

```{r,warning=FALSE}
# Pseudo R-squared
pR2(m.glm)

# or in better format
pR2(m.glm) %>% round(4) %>% tidy()
```

-   **llh**: The log-likelihood of the fitted model.

-   **llhNull**: The log-likelihood of the null model (without predictors).

-   **G2**: The likelihood ratio statistic, showing the model’s improvement over the null model.

-   **McFadden**: McFadden’s pseudo R-squared (a common measure of model fit).

-   **r2ML**: Maximum likelihood pseudo R-squared.

-   **r2CU**: Cox & Snell pseudo R-squared.

Different from the multiple linear regression, whose R-squared indicates % of the variance in the dependent variables that is explained by the independent variable. In logistic regression model, R-squared is not directly applicable. Instead, we use pseudo R-squared measures, such as McFadden’s pseudo R-squared, or Cox & Snell pseudo R-squared to provide an indication of model fit. For the individual level dataset like SAR, value around 0.3 is considered good for well-fitting.

### **Statistical significance of regression coefficients or covariate effects**

Similar to the statistical inference in a linear regression model context, p-values of regression coefficients are used to assess significances of coefficients; for instance, by comparing p-values to the conventional level of significance of 0.05:

·       If the p-value of a coefficient is smaller than 0.05, the coefficient is statistically significant. In this case, you can say that the relationship between an independent variable and the outcome variable is *statistically* significant.

·       If the p-value of a coefficient is larger than 0.05, the coefficient is statistically insignificant. In this case, you can say or conclude that there is no statistically significant association or relationship between an independent variable and the outcome variable.

### **Interpreting estimated regression coefficients**

-   The interpretation of coefficients (B) and odds ratios (Exp(B)) for the independent variables differs from that in a linear regression setting.

-   Interpreting the regression coefficients.

o   For the variable **`sex`**, a negative sign and the odds ratio estimate indicate that the probability of commuting over long distances for female is 0.693 times less likely than male (the reference group), with the confidence intervals (CI) or likely range between 0.6 to 0.7, holding all other variables constant (the socio-economic classification variable). Put it differently, being females reduces the probability of long-distance commuting by 30.7% (1-0.693).

o   For variable **`nssec`**, a positive significant and the odds ratio estimate indicate that the probability of long-distance commuting for those whose socio-economic classification as:

-    small employers and own account workers (nssec=5) are 3.409 times more likely than the higher prof occupations, holding all other variables constant (the Sex variable), with a likely range (CI) of between 3.0 to 3.8.

-   the p-value of Large employers and higher managers (nssec=1) is \> 0.05, so thre is no statistically significant relationship between large employers and higher managers and long-distance commuting.

-   Routine occupations (nssec=8) are 0.226 times (or 22.6%) less likely than the higher professional occupations, with the CI between 0.18 to 0.27. when other variable constant. Or, we can see being routine occupations decreases the probability of long-distance commuting by 77.4% (1-0.226).

::: {style="background-color: #FFFBCC; padding: 10px; border-radius: 5px; border: 1px solid #E1C948;"}
**Q4.** Interpret the regression coefficients (i.e. Exp(B)) of variables “nssec=Lower managerial and professional occupations” and “nssec=Semi-routine occupation".
:::

::: {style="background-color: #FFFBCC; padding: 10px; border-radius: 5px; border: 1px solid #E1C948;"}
**Q5.** Could you identify significant factors of commuting over long distances?
:::

## **Extension activities**

The extension activities are designed to get yourself prepared for the Assignment 2 in progress. For this week, try whether you can:

-   Select a regression strategy and explain why a linear or logit model is appropriate

-   Perform one or a series of regression models, including different combinations of your chosen independent variables to explain and/or predict your dependent variable

### Answer for the model in Q3

In Q3, we we want to explore whether people with occupation being "Large employers and higher managers", "Higher professional occupations" and "Routine occupations" are associated with higher probability of commuting over long distance when comparing to people in other occupation. So we create the variable `New_nssec` with 0 "Other occupations", but still keep "1", "2" and "8" still as original categories.

So we can first have a check of our new variable `New_nssec`:

```{r}
table(sar_df$New_nssec)
```

Then we set the reference categories: `sex` as `1` (male) and `New_nssec` as `0`, which is "Other occupations":

```{r}
sar_df$sex <- relevel(as.factor(sar_df$sex),ref="1")
sar_df$New_nssec <- relevel(as.factor(sar_df$New_nssec),ref="0")
```

Now, we build the logistic regression model and check out the outcomes:

```{r}
model_new = glm(New_work_distance~sex + New_nssec, data = sar_df, family= "binomial")

summary(model_new)
```

For the model interpretation, we need:

```{r}
# odds ratios
exp(coef(model_new)) 


# confidence intervals
exp(confint(model_new, level = 0.95)) 

# model fit
pR2(model_new) %>% round(4) %>% tidy()
```
